*** Виталий Мурысев 9 месяцев назад
Failed test #6. answer text is not found on question page http://10.42.9.242/question/3141592/
﻿Помимо всего прочего, в модели Answer (!!!) на добавить к полю added_at возможность Null=True.
В моём случае в модель просто не добавлялись ответы и, соответственно, не отображались.
Владимир Смирнов - 8 месяцев назад @Виталий_Мурысев, логичнее было бы  auto_now_add=True

*** Сами шаблоны лежат в папке "home/box/web/ask/qa/templates". В settings.py пробовал задавать в виде:
1) 'DIRS': [os.path.join(BASE_DIR, 'templates'),],
2) 'DIRS': [os.path.join(BASE_DIR, 'qa/templates'),],
Василий Виноградов - 5 месяцев назад
но второй вариант правильный и проблема не здесь. Без указания 'DIRS' тоже должно работать из-за 'APP_DIRS': True.
Если бы ошибка была в поиске шаблонов, то сервер джанги (например, запущенный у себя через
./manage.py runserver/testserver)  выдал бы в консоль:django.template.exceptions.TemplateDoesNotExist: templatename.html,
а браузеру отдал страницу с кодом 500 и описанием ошибки:TemplateDoesNotExist at /popular/

*** Anonymous 15955996 год назад
Первая задача приближенная к "боевой". Потратил почти неделю, конечно не каждый день. Пересмотрел лекции.
Сделал на python3 и djanho 2.0.7. База -- sqlite. Старый конфиг с nginx, пробрасывающий с 80 на 8000 порт использовался,
поэтому runserver был на 8000 порту.
Для тестов на своей машине использовал django-seed. Упомянутый ранее autfixture не совместим с Django 2.0.

*** Сергей Иванов -2 года назад
Прошёл, но неделю убил.
1. Долго разбирался с 500 ошибкой. Проблема оказалась в том, что в файле settings.py отсутствовали настройки
TEMPLATE_DIRS - совсем не было у меня. Как упустил, не понял.
2. Проверяйте curl --vv http:// каждый шаг. Должно возвращать 200.
3. Если возвращает 200, но валится на ошибках обязательно устанавливайте sudo apt-get install lynx (консольный браузер)
и в settings.py DEBUG = True и TEMPLATE_DEBUG = True. Это ускоряет отлавливание ошибок.
4. Не комментируйте по-русски в файлах или вводите в шапке файла
#!/usr/bin/env python
# -*- coding: utf-8 -*-
P.S. Благодаря комментам ниже и выстраиванием правильного алгоритма тестирования и отлавливания багов, заданиепроходится.

*** Андрей Ковтун 3 года назад
Для ленивых, кому лень вбивать «рыбу» в БД, есть модуль django-autofixture.
Установка через pip, не забыть прописать 'autofixture' в INSTALLED_APPS, и дальше:
Для записи сразу во все таблицы можно их перечислить через пробел:
python manage.py loadtestdata qa.Question:20 qa.Answer:50
Как вбивать User'ов таким образом, не нашел. Один раз набрал вручную несколько человек, экспортировал в json
используя fixtures. Теперь они загружаются автоматически (инструкция).

*** Александр Кочнев 3 года назад
@Андрей_Ковтун Я сделал так, как описано в инструкции. Запустил python manage.py shell и там выполнил команды:
from autofixture import AutoFixture
from qa.models import Answer
fixture = AutoFixture(Answer, generate_fk=True)
entries = fixture.create(10)
Пользователи создались автоматически.

*** Anonymous 15010928 3 года назад
Коллеги, обращаю внимание: Шаблон paginator на странице 12, составлен преподавателем некорректно.
<nav><ul class="pagination">
{% for p in paginator.page_range %}
 {% if p.number == page.number %}
 <li class="active">
 {% else %}
 <li>
 {% endif %}
  <a href="{{ paginator.baseurl }}{{ p.number }}">
  {{ p.number }}</a>
</li>
{% endfor %}
</ul></nav>
number это свойство page, а в данном контексте p не является объектом page, здесь p это число integer  из списка
page_range, правильная ссылка должна выглядеть так:
<a href="{{ paginator.baseurl }}{{ p }}">
  {{ p }}</a>
и {% if p.number == page.number %} также нужно заменить на  {% if p == page.number %}

*** Vitaly Samigullin 3 года назад
Кучу времени убил из-за фейла теста #2, мол, не найден последний добавленный вопрос. Оказалось, что сортировать надо
не по '-added_at', а по '-id'. Организация этого курса оскорбляет мой разум, ребята. Очень плохая музыка.

*** Андрей Цобенко 3 года назад
Итак, рассказываю свою "историю боли":
1. Установить всё необходимое через pip3. Мне нужно было Django, gunicorn и pymysql
2. Удалить из папки /usr/bin python, python2 и python2.7 (подозреваю, что достаточно чего-то одного, но лень было
их перебирать) и создать соответствующие символические ссылки на третий
3. В файле из ~, который начинается на "server", перед импортом первой модели добавить:
import django
django.setup()
4. gunicorn запускать тот, что выкачан через pip3. Об этом уже писали в предыдущем задании
делал так:Решил использовать последнюю версию Django. Сразу после открытия терминала на всякий случай сделал
apt-get update и apt-get upgrade (для этих и вообще почти всех команд нужны root-права, sudo в помощь). Затем выкачал
всё с помощью pip3. Включил mysql. Создал пустую БД через утилиту mysql. Заменил исполняемые файлы второго пайтона
в /usr/bin на символические ссылки на третий. Выкачал свой проект с гитхаба. Сделал manage.py migrate. Настройка и
включение nginx ничем не отличается от предыдущих заданий. Подправил содержимое файла для тестов так, как написал выше.
В итоге команда запуска (из директории ~/web/ask) была такой: python3 /usr/local/bin/gunicorn -b 0.0.0.0:8000 ask.wsgi.
Вроде ничего не забыл :D
Александр Стекольщиков
Дополню, что  django.setup() надо писать не только до импорта первой модели, но и после строки
os.environ['DJANGO_SETTINGS_MODULE'] = 'ask.settings'
Я написал в самом начале файла, в итоге очень много времен потратил на решение
Anonymous 38620331 - год назад
@Андрей_Цобенко, ну это смешно, когда можно использовать виртуальное окружение))

*** Николай Гурьев
2 года назад
Долго не мог разобраться, почему все валилось на 3 тесте. Система выдавала ошибку "Последний добавленный вопрос
не был найден на главной странице". Решение проблемы состоит в том, чтобы у метода new() модели Question сортировка
была не по дате добавления: self.order_by('-added_at'), а по id: self.order_by('-id').
Это объясняется тем, что в модели Question поле added_at хранит дату добавления вопроса без времени. Если добавлено
несколько вопросов в один и тот же день, они будут сортироваться по умолчанию по возрастанию id (т.е. от малого id к
большому). Получается, что последний добавленный вопрос будет среди добавленных в тот же день вопросов не первым, а
последним.
Можно еще указать класс Meta в модели Question и в нем задать сортировку объектов по умолчанию. Но сортировка не очень
быстрая операция, а если ее задать в Meta, она будет выполняться всегда. Поэтому лучше не добавлять класс Meta без
необходимости.

*** Даниил Маркелов
3 года назад
Ссылка
Товарищи организаторы, следите за своими тестами! Убил кучу времени на это задание только из-за того, что в одном из
предыдущих заданий в тесте с какого-то перепугу требовался QuestionManager, вместо Question.objects, тогда тоже было
убито много времени. Здесь же для прохождения тестов нужен именно стандартный менеджер!!!

*** Вячеслав Алпатов
3 года назадСсылка
Прошел
1. запуск python /home/box/web/ask/manage.py runserver 0.0.0.0:8000 & вместо gunicorn
2. тест работает через nginx -надо не забывать убивать все лишние конфиги. Ну или убить все это и стартовать
/home/box/web/ask/manage.py runserver 0.0.0.0:80 сразу (второй вариант не тестировался)
3. юзера test создал руками при syncdb и вытер его создание из server_l13.py
PS Дома на ubantu работает все как надо без выкрутасов.
PSS тест проверяет
[20/May/2016 09:56:06] "GET / HTTP/1.0" 200 1640
[20/May/2016 09:56:06] "GET /?page=2 HTTP/1.0" 200 1640
[20/May/2016 09:56:06] "GET /popular/?page=2 HTTP/1.0" 200 1623
[20/May/2016 09:56:06] "GET /question/3141592/ HTTP/1.0" 200 2961

*** Владимир Федорчук
3 года назадСсылка
Очередные пара замечаний:
1) В домашнем каталоге /home/box/ имеется файл server_l13.py который заполняет вашу БД значениями для последующего
тестирования. Я скопировал его содержимое на локальную машину и довольно долго подгонял модели под этот скрипт. Там
требовались в основном всякие null=True и default=0. Зато когда локально он у меня стал работать без ошибок, я и на
сервере с первого раза тесты прошел.
2) На сервере, как и на локальной машине, я использовал sqlite3 ни встретил ни одной из множества проблем с MySQL,
которые описали многие пользователи.

*** Александр Безуглов / Alexandr Bezuglov
3 года назад
Для запуска теста можно не морочиться с nginx+gunicorn, достаточно встроенного джанговского сервера. Запуск:
sudo python3 ~/web/ask/manage.py runserver 0.0.0.0:80
до запуска джанговского сервера надо остановить nginx иначе он не даст джанге прицепиться к 80 порту
sudo /etc/init.d/nginx stop
